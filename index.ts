/**
 *
 * @author fuyg
 * @date  2020-08-21
 */

import gemoji from './libs/gemoji/index.json'
import emojiRank from './libs/tracker/index.json'
import * as fs from 'fs'

const maxSnippets = 256
const counter: { [key: string]: number } = {}
const lineBreak = '\r\n'

const byteSize = (str: string): number => new Buffer(str).length
const markdownContent = [
  '# supported emoji',
  '',
  '> This file is generated by code. Do not modify.',
  '',
  '| index  |snippets trigger | emoji | description |',
  '| :--------------- | :---- | :---------- |:----------|',
]
let indexNumber = 0

function createEmojiSnippet(
  emoji: string,
  name: string,
  description: string,
  isTag = false,
): string[] {
  if (counter[name] == null) {
    counter[name] = 0
  } else {
    counter[name] += 1
  }
  const theCounter = counter[name]
  const theName = theCounter > 0 ? `${name}${theCounter}` : name
  const lines = [
    '',
    isTag ? '# tag' : '# name',
    `snippet ${theName} "emoji ${emoji}: ${description}"`,
    `${emoji}`,
    `endsnippet`,
  ]
  indexNumber += 1
  markdownContent.push(
    `| ${indexNumber}  | ${theName}        | ${emoji}    |   ${description}          |`,
  )
  return lines
}

function createEmojiSnippetAll(): string {
  const topEmojiList: string[] = []

  for (let count = 0; count < maxSnippets; count++) {
    const rankItem = emojiRank[count]
    topEmojiList.push(rankItem.char)
  }

  const snippets: Array<string[]> = []
  gemoji.forEach((item) => {
    const { names, tags, emoji, description } = item
    if (!topEmojiList.includes(emoji)) {
      return
    }
    names.forEach((name) => {
      const snippet = createEmojiSnippet(emoji, name, description)
      snippets.push(snippet)
    })
    tags.forEach((tag) => {
      const snippet = createEmojiSnippet(emoji, tag, description, true)
      snippets.push(snippet)
    })
  })

  console.log(`create ${snippets.length} snippets`)

  const lines = snippets.map((item) => {
    return item.join(lineBreak)
  })
  lines.unshift('# This file is generated by code. Do not modified')
  const content = lines.join(lineBreak)
  return content
}

let snippets = createEmojiSnippetAll()
fs.writeFileSync('./UltiSnips/all.snippets', snippets)
fs.writeFileSync('./list.md', markdownContent.join(lineBreak))
process.exit()
